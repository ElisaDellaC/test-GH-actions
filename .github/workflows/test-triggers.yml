name: build-and-test

on:
  pull_request:
    branches: master
    types: [synchronize, opened, reopened, ready_for_review]

jobs:
  setup:
    # skip if the PR is a draft or if it has a WIP label or it has a test-results-out-of-date label
    if: github.event.pull_request.draft == false || ( github.event.pull_request.draft && contains( github.event.pull_request.labels.*.name, 'run-CI'))
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
        # Pull the entire branch and not just the single commit
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - id: getCommitMessage
        name: get commit message
        shell: bash
        run: |
          MSG=$(git log --format=%B -n 1 ${{github.event.after}})
          echo "PR_COMMIT_MESSAGE=${MSG}" >> $GITHUB_ENV
          echo ::set-output name=PR_COMMIT_MESSAGE::${MSG}

      - name: print commit message
        run: echo $PR_COMMIT_MESSAGE

  other-job:
    runs-on: ubuntu-latest
    needs:
      - setup
    env:
      PR_COMMIT_MESSAGE: ${{ needs.setup.outputs['PR_COMMIT_MESSAGE'] }}

    steps:
     - name: print commit message from other job
       run: echo $PR_COMMIT_MESSAGE
